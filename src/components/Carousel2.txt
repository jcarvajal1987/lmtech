import { ItemCarousel } from "./ItemCarousel";
import { useRef } from 'react'
import Search from "../../public/search.svg";
import Lifting from "../../public/lifting.svg";
import Code from "../../public/code.svg";
import Implementation from "../../public/implementation.svg";

const slides = [
  {
    icon: Lifting.src,
    title: "Levantamiento",
    text: "Nos interiorizamos en tu negocio para entender tus procesos y reconocer tus oportunidades, utilizando las metodologías de diseño más modernas para realizar el proyecto que desees.",
  },
  {
    icon: Search.src,
    title: "Análisis de Procesos",
    text: "Reconocidas tus necesidades, realizamos un análisis técnico que se ajuste a tu negocio, considerando la inversión prevista y generando la solución más viable y al alcance de tu negocio.",
  },
  {
    icon: Code.src,
    title: "Desarrollo Tecnológico",
    text: "Utilizamos las tecnologías más recientes para desarrollar tus proyectos, tanto a nivel de software como de hardware. Explora los recursos disponibles en la nube con nosotros, y lleva tu negocio a un siguiente nivel.",
  },
  {
    icon: Implementation.src,
    title: "Implementación",
    text: "Tus usuarios o clientes tendrán el apoyo y el tiempo necesario para implementar las nuevas tecnologías. Con procesos de aprendizajes rápidos y desarrollos intuitivos.",
  },
];

export const Carousel2 = () => {
  const slideshow = useRef<HTMLDivElement | null>(null)
  let pressed = false;
  let startX: number;
  let x;
  const mouseDown= (e: { clientX: number; target: { style: { cursor: string; }; }; }) => {
    pressed = true;
    
    var matrix = new WebKitCSSMatrix(slideshow.current.style.transform)
      console.log(matrix.m41)
    startX = e.clientX - matrix.m41;
    e.target.style.cursor = "grabbing";


    };
  
    const mouseEnter= (e: { target: { style: { cursor: string; }; }; }) => {


      e.target.style.cursor = "grab";
    };
    const mouseUp= (e: { target: { style: { cursor: string; }; }; }) => {
      e.target.style.cursor = "grab";
    pressed = false;
    };


    
    const mouseMove= (e: { preventDefault: () => void; clientX: any; }) => {
      if (!pressed) return;
    e.preventDefault();
    


    x = e.clientX;

    // slideshow.current.style.transform = `${x - startX}px `;

    slideshow.current.style.transform = `translateX(${x - startX}px)`

    
    };




  // const handleDrag = (e) =>{
  //   console.log(e.clientX )
  //   slideshow.current.style.transform = `translateX(${e.clientX }px)`
  // }
  // const Efecto = () =>{
  //   slideshow.current.style.transition = `2000ms ease-out all`
  //   slideshow.current.style.transform = `translateX(-${slideshow.current.clientWidth}px)`
  // }
  return (
    <>
      <div className="wrapper mt-20 overflow-hidden" onMouseDown={mouseDown} 
    onMouseEnter={mouseEnter}  
     onMouseUp={mouseUp}  
     onMouseMove={mouseMove}>
        <div className="w-4/5 mx-auto pointer-events-none">

        <div className="flex flex-nowrap" ref={slideshow}  >
          {slides.map((slide, index) => (
            <div className="min-w-full flex flex-col " key={index}>
              <ItemCarousel icon={slide.icon} title={slide.title} text={slide.text} index={index} />
              <div className="px-2 md:px-10">
                <div className="reflejo"></div>
              </div>
            </div>
          ))}
        </div>
      </div>
          </div>
    </>
  );
};
